services:
  rt:
    build:
      context: .
    image: firefart/requesttracker:latest
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 5
      endpoint_mode: vip
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ./RT_SiteConfig.pm:/opt/rt5/etc/RT_SiteConfig.pm:ro
      - ./msmtp/msmtp.conf:/etc/msmtprc:ro
      - ./msmtp/:/msmtp:ro
      - ./getmail/getmailrc:/getmail/getmailrc:ro
      - ./gpg/:/opt/rt5/var/data/gpg
      - ./smime/:/opt/rt5/var/data/smime
      - ./shredder/:/opt/rt5/var/data/RT-Shredder
      - /etc/localtime:/etc/localtime:ro
    # make the host available inside the image
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - net

  cron:
    build:
      context: .
    image: firefart/requesttracker:latest
    restart: unless-stopped
    # the cron daemon needs to run as root
    user: root
    command: ["/root/cron_entrypoint.sh"]
    # no need for tini here
    entrypoint: ""
    # disable the healthcheck from the main dockerfile
    healthcheck:
      disable: true
    depends_on:
      rt:
        condition: service_healthy
        restart: true
      # we send rt-mailgate over to nginx
      nginx:
        condition: service_healthy
        restart: true
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ./RT_SiteConfig.pm:/opt/rt5/etc/RT_SiteConfig.pm:ro
      - ./msmtp/msmtp.conf:/etc/msmtprc:ro
      - ./msmtp/:/msmtp:ro
      - ./getmail/getmailrc:/getmail/getmailrc:ro
      - ./gpg/:/opt/rt5/var/data/gpg
      - ./smime/:/opt/rt5/var/data/smime
      - ./cron/crontab:/root/crontab:ro # needed so we can add it ro. Permissions are changed in startup script
      # - ./cron/:/cron
      - ./shredder/:/opt/rt5/var/data/RT-Shredder
      - /etc/localtime:/etc/localtime:ro
    # make the host available inside the image
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - net

  nginx:
    build:
      context: nginx
    image: firefart/requesttracker:nginx-latest
    restart: unless-stopped
    ports:
      - "8080:8081"
      #- "127.0.0.1:8080:8080" # expose mailgate vhost to host
    # uncomment to enable debug mode
    # command: [nginx-debug, '-g', 'daemon off;']
    depends_on:
      rt:
        condition: service_healthy
        restart: true
      # dozzle:
      #  condition: service_healthy
      #  restart: true
      #pgadmin:
      #  condition: service_healthy
      #  restart: true
    volumes:
      - ./nginx/certs/:/certs/:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/startup-scripts/:/docker-entrypoint.d/:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - net

  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: rt
      POSTGRES_USER: rt
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "rt"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - vol_db:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - net

volumes:
  vol_pgadmin: {}
  vol_db: {}

networks:
  net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_rt
